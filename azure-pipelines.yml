
variables:
    buildConfiguration: "Debug"
    testProject: "tests/MySample.Tests"
    solution: "MySample.sln"

trigger:
- master

pool:
  name: 'TestPool'
  demands: Agent.Name -equals jaba-windows

steps:
- task: UseDotNet@2
  displayName: Install .NET 2 sdk 
  inputs:
    packageType: sdk
    version: 2.2.x
    installationPath: $(Agent.ToolsDirectory)/dotnet

- task: SonarCloudPrepare@3
  displayName: 'coverage from: $(Build.SourcesDirectory)'
  inputs:
    SonarQube: 'SonarCloud'
    organization: 'sonarcloud-jaba'
    scannerMode: 'dotnet'
    projectKey: 'jabadrian_code-coverage-sample'
    projectName: 'code-coverage-sample'
    extraProperties: 'sonar.cs.opencover.reportsPaths=$(Build.SourcesDirectory)/coverage/coverage.opencover.xml'

- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    projects: '$(solution)'
    arguments: '--configuration $(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: Test
  inputs:
    command: test
    publishTestResults: true
    arguments: '--collect:"Code Coverage" --settings "./coverlet.runsettings"'

- script: |
    dotnet tool install dotnet-reportgenerator-globaltool --tool-path .
    .\reportgenerator.exe "-reports:$(Agent.TempDirectory)/**/coverage.opencover.xml" "-targetdir:coverage/Cobertura" "-reporttypes:Cobertura;HTMLInline;HTMLChart"
  condition: eq( variables['Agent.OS'], 'Windows_NT' )
  displayName: Run Reportgenerator on Windows

- task: PublishCodeCoverageResults@2
  displayName: "Publish code coverage"
  inputs:
    summaryFileLocation: $(Build.SourcesDirectory)/coverage/Cobertura/Cobertura.xml

- task: SonarCloudAnalyze@3
  displayName: 'Run Code Analysis'

- task: SonarCloudPublish@3
  displayName: 'Publish Quality Gate Result'

- task: DotNetCoreCLI@2
  inputs:
    command: publish
    arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
    projects: $(solution)
    publishWebProjects: false
    modifyOutputPath: true
    zipAfterPublish: true

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact (WebApp.zip)'
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)'